name: Pylint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        mkdir -p tests-results/linting
        pylint $(git ls-files '*.py' | grep -v 'tests/') | tee tests-results/linting/pylint.log
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pylint-logs
        path: tests-results/linting/pylint.log
        retention-days: 30

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - uses: Gr1N/setup-poetry@v8
    - name: Install dependencies
      run: |
        poetry install
    - name: Run tests
      run: |
        poetry run pytest --junitxml=tests-results/pytest/test-report.xml
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: tests-results/pytest
        retention-days: 30

  coverage:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - uses: Gr1N/setup-poetry@v8
    - name: Install dependencies
      run: |
        poetry install
    - name: Run coverage
      run: |
        poetry run pytest --cov=senior_swe_ai --cov-report=xml --cov-report=html
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-results
        path: coverage.xml
        retention-days: 30

    
